{"version":3,"file":"BoxOpening-BFPlTemq.js","sources":["../../src/pages/TaskAdsKey.tsx","../../src/components/boxOpening/KeyCrafting.tsx","../../node_modules/@mui/icons-material/Search.js","../../src/components/Ads/1levelupgrade.tsx","../../src/assets/boxes/01_ROLEX_DAYTONA-Box-mock_box_tgFf3C6.png","../../src/components/boxOpening/BoxOpening.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport styles from \"./task.module.css\";\nimport { Box, Drawer, Typography, Button } from \"@mui/material\";\nimport { getFirestore, doc, updateDoc, increment } from 'firebase/firestore';\nimport { initializeApp } from 'firebase/app';\nimport { firebaseConfig } from './firebaseConfig';\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\n\n/**\n  * Check Typescript section\n  * and add types for <adsgram-task> typing\n*/\n\ninterface TaskProps {\n  debug: boolean;\n  blockId: string;\n}\n\nexport const Task = ({ debug, blockId }: TaskProps) => {\n  const taskRef = useRef<AdsgramTaskElement>(null);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n\n \n\n  const handleClaim = async () => {\n    try {\n      setLoading(true);\n      const telegramUserId = localStorage.getItem('telegramUserId');\n      if (!telegramUserId) throw new Error('User ID not found');\n\n      const userDocRef = doc(db, 'users', telegramUserId);\n      await updateDoc(userDocRef, {\n        keyParts: increment(5)\n      });\n\n      setIsDrawerOpen(false);\n    } catch (error) {\n      console.error('Error claiming reward:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    const handler = (_event: CustomEvent<string>) => {\n      setIsDrawerOpen(true);\n    };\n    const task = taskRef.current;\n\n    if (task) {\n      task.addEventListener(\"reward\", handler);\n    }\n\n    return () => {\n      if (task) {\n        task.removeEventListener(\"reward\", handler);\n      }\n    };\n  }, []);\n\n  if (!customElements.get(\"adsgram-task\")) {\n    return null;\n  }\n\n  return (\n    <>\n     \n        <>\n          <adsgram-task\n            className={styles.task}\n            data-block-id={blockId}\n            data-debug={debug}\n            ref={taskRef}\n          >\n            <span slot=\"reward\" className={styles.reward}>\n              Get free key parts\n            </span>\n            <div slot=\"button\" className={styles.button}>\n              Go\n            </div>\n            <div slot=\"done\" className={styles.button_done}>\n              Done\n            </div>\n          </adsgram-task>\n\n          <Drawer\n            anchor=\"bottom\"\n            open={isDrawerOpen}\n            onClose={() => setIsDrawerOpen(false)}\n            PaperProps={{\n              sx: {\n                backgroundColor: '#1A2126',\n                borderTopLeftRadius: '16px',\n                borderTopRightRadius: '16px',\n                border: '1px solid rgba(110, 211, 255, 0.1)',\n              }\n            }}\n          >\n            <Box sx={{ p: 3, textAlign: 'center' }}>\n              <Typography\n                variant=\"h6\"\n                sx={{\n                  color: '#fff',\n                  fontWeight: 600,\n                  mb: 1\n                }}\n              >\n                You've earned 5 key parts for completing this task !\n              </Typography>\n              <Typography\n                sx={{\n                  color: 'rgba(255,255,255,0.7)',\n                  mb: 3\n                }}\n              >\n                Now you can craft with 5 key parts !\n              </Typography>\n              <Button\n                variant=\"contained\"\n                onClick={handleClaim}\n                disabled={loading}\n                sx={{\n                  backgroundColor: 'rgba(110, 211, 255, 0.1)',\n                  color: '#6ed3ff',\n                  '&:hover': {\n                    backgroundColor: 'rgba(110, 211, 255, 0.2)',\n                  },\n                  minWidth: 120,\n                }}\n              >\n                {loading ? 'Claiming...' : 'Claim Reward'}\n              </Button>\n            </Box>\n          </Drawer>\n        </>\n     \n    </>\n  );\n};","import React from 'react';\nimport { Box, Button, Typography, CircularProgress, IconButton } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport KeyIcon from '@mui/icons-material/Key';\nimport InfoOutlinedIcon from '@mui/icons-material/InfoOutlined';\nimport { Task } from '../../pages/TaskAdsKey';\n\ninterface KeyCraftingProps {\n  keyParts: number;\n  onCraftKey: () => void;\n  isLoading: boolean;\n  onOpenFreeBox?: () => void;\n}\n\n// Renk paleti\nconst commonStyles = {\n  primaryColor: '#6ed3ff',\n  primaryGradient: 'linear-gradient(90deg, #6ed3ff, #8ee9ff)',\n  bgGradient: 'linear-gradient(135deg, rgba(110, 211, 255, 0.3) 0%, rgba(110, 211, 255, 0.1) 100%)',\n  borderColor: 'rgba(110, 211, 255, 0.2)',\n  hoverBorderColor: 'rgba(110, 211, 255, 0.4)',\n  buttonShadow: '0 4px 12px rgba(110, 211, 255, 0.3)',\n  buttonHoverShadow: '0 6px 16px rgba(110, 211, 255, 0.4)',\n};\n\nconst KeyCrafting: React.FC<KeyCraftingProps> = ({ keyParts, onCraftKey, isLoading}) => {\n  const canCraftKey = keyParts >= 5;\n  const progress = (keyParts / 5) * 100;\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n    >\n      <Box //@ts-ignore\n        sx={{\n          mt: 4,\n          p: 3,\n          background: commonStyles.bgGradient,\n          borderRadius: '15px',\n          border: `1px solid ${commonStyles.borderColor}`,\n          position: 'relative',\n          overflow: 'hidden',\n          transition: 'all 0.3s ease',\n          '&:hover': {\n            border: `1px solid ${commonStyles.hoverBorderColor}`,\n            boxShadow: commonStyles.buttonHoverShadow,\n          }\n        }}\n      >\n        {/* Background Animation Effect */}\n        <Box\n          sx={{\n            position: 'absolute',\n            top: '-50%',\n            left: '-50%',\n            width: '200%',\n            height: '200%',\n            background: `radial-gradient(circle, ${commonStyles.primaryColor}15 0%, ${commonStyles.primaryColor}00 70%)`,\n            pointerEvents: 'none',\n            opacity: canCraftKey ? 1 : 0,\n            transition: 'opacity 0.3s ease',\n          }}\n        />\n\n        <Box sx={{ position: 'relative', zIndex: 1 }}>\n          {/* Header Section */}\n          <Box sx={{ \n            display: 'flex', \n            alignItems: 'center', \n            justifyContent: 'space-between',\n            mb: 3\n          }}>\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1.5 }}>\n              <Box sx={{ \n                width: '48px',\n                height: '48px',\n                borderRadius: '12px',\n                background: commonStyles.primaryGradient,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                boxShadow: commonStyles.buttonShadow\n              }}>\n                <KeyIcon sx={{ \n                  color: 'white',\n                  fontSize: '1.8rem'\n                }} />\n              </Box>\n              <Box>\n                <Typography\n                  variant=\"h6\"\n                  sx={{\n                    color: 'white',\n                    fontWeight: 'bold',\n                    lineHeight: 1.2\n                  }}\n                >\n                  Key Crafting\n                </Typography>\n                <Typography sx={{ color: 'rgba(255,255,255,0.7)', fontSize: '0.9rem' }}>\n                  Collect 5 parts to craft a key\n                </Typography>\n              </Box>\n            </Box>\n            <IconButton \n              sx={{ \n                color: 'rgba(255,255,255,0.7)',\n                '&:hover': { color: commonStyles.primaryColor }\n              }}\n            >\n              <InfoOutlinedIcon />\n            </IconButton>\n          </Box>\n\n          {/* Progress Section */}\n          <Box sx={{ mb: 3 }}>\n            <Box sx={{ \n              display: 'flex', \n              justifyContent: 'space-between',\n              alignItems: 'center',\n              mb: 1\n            }}>\n              <Typography sx={{ color: 'rgba(255,255,255,0.7)', fontSize: '0.9rem' }}>\n                Progress\n              </Typography>\n              <Typography sx={{ \n                color: canCraftKey ? commonStyles.primaryColor : 'rgba(255,255,255,0.7)',\n                fontWeight: 'bold',\n                fontSize: '0.9rem'\n              }}>\n                {keyParts}/5 parts\n              </Typography>\n            </Box>\n            \n            {/* Progress Bar */}\n            <Box sx={{ \n              width: '100%', \n              height: '8px', \n              background: 'rgba(255,255,255,0.1)',\n              borderRadius: '4px',\n              overflow: 'hidden',\n            }}>\n              <motion.div\n                initial={{ width: 0 }}\n                animate={{ width: `${progress}%` }}\n                transition={{ duration: 0.5 }}\n                style={{\n                  height: '100%',\n                  background: canCraftKey ? \n                    commonStyles.primaryGradient : \n                    'linear-gradient(90deg, rgba(255,255,255,0.2), rgba(255,255,255,0.3))',\n                  borderRadius: '4px',\n                }}\n              />\n            </Box>\n          </Box>\n\n          {/* Action Buttons */}\n          <Box sx={{ mt: 3, display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <Button\n              variant=\"contained\"\n              onClick={onCraftKey}\n              disabled={!canCraftKey || isLoading}\n              fullWidth\n              sx={{\n                py: 1.5,\n                background: canCraftKey ? commonStyles.primaryGradient : 'rgba(255,255,255,0.1)',\n                color: canCraftKey ? 'black' : 'rgba(255,255,255,0.5)',\n                fontWeight: 'bold',\n                fontSize: '0.95rem',\n                borderRadius: '8px',\n                textTransform: 'none',\n                position: 'relative',\n                boxShadow: canCraftKey ? commonStyles.buttonShadow : 'none',\n                '&:hover': {\n                  background: canCraftKey ? \n                    'linear-gradient(90deg, #8ee9ff, #6ed3ff)' : \n                    'rgba(255,255,255,0.1)',\n                  boxShadow: canCraftKey ? commonStyles.buttonHoverShadow : 'none'\n                },\n                '&:disabled': {\n                  background: 'rgba(255,255,255,0.1)',\n                  color: 'rgba(255,255,255,0.3)',\n                }\n              }}\n            >\n              {isLoading ? (\n                <CircularProgress \n                  size={24} \n                  sx={{ \n                    color: canCraftKey ? 'black' : 'rgba(255,255,255,0.5)',\n                  }} \n                />\n              ) : (\n                <>\n                  {canCraftKey ? 'Craft Key' : 'Insufficient Parts'}\n                </>\n              )}\n            </Button>\n\n            {/* Open Free Box Button - Only show when can't craft key */}\n            {!canCraftKey && (\n             \n                <Task \n                        blockId=\"task-8200\"\n                        debug={false}\n                      />\n            )}\n          </Box>\n        </Box>\n      </Box>\n    </motion.div>\n  );\n};\n\nexport default KeyCrafting; ","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14\"\n}), 'Search');","import React, { useState, useCallback, useEffect } from 'react';\nimport {\n  Box,\n  Button,\n  Typography,\n  CircularProgress,\n} from '@mui/material';\nimport { Hourglass, Sparkles } from 'lucide-react';\nimport { getFirestore, doc, updateDoc, increment } from 'firebase/firestore';\nimport { app } from '../../pages/firebaseConfig';\nimport { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\nimport ticket from '../../assets/ticket.png';\nimport watchad from '../../assets/watchad.png'\n\n\nconst db = getFirestore(app);\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nconst RotatingIcon = styled(Box)`\n  animation: ${rotate} 2s steps(2) infinite;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\ninterface LevelUpgradeProps {\n  onAdComplete?: () => void;\n  disabled?: boolean;\n}\n\nconst ADSTERRA_DIRECT_LINK = 'https://www.effectiveratecpm.com/rfzqpxh9b5?key=363850befc2ce02b0f1173157255afe8';\nconst TOTAL_REQUIRED_VIEWS = 2;\nconst VIEW_COUNT_KEY = 'levelUpgradeViewCount';\nconst LAST_CLAIM_KEY = 'lastLevelUpgradeClaim';\nconst COOLDOWN_TIME = 60 * 1000; // 1 minute in milliseconds\n\nconst LevelUpgrade: React.FC<LevelUpgradeProps> = ({ onAdComplete, disabled }) => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [viewCount, setViewCount] = useState(0);\n  const [timeLeft, setTimeLeft] = useState<number | null>(null);\n\n  // Load initial view count and check cooldown\n  useEffect(() => {\n    const lastClaim = localStorage.getItem(LAST_CLAIM_KEY);\n    if (lastClaim) {\n      const lastClaimTime = parseInt(lastClaim);\n      const now = Date.now();\n      const timePassed = now - lastClaimTime;\n      \n      if (timePassed < COOLDOWN_TIME) {\n        setTimeLeft(COOLDOWN_TIME - timePassed);\n        // Reset view count during cooldown\n        localStorage.removeItem(VIEW_COUNT_KEY);\n        setViewCount(0);\n      } else {\n        // Cooldown expired, clean up everything\n        localStorage.removeItem(LAST_CLAIM_KEY);\n        localStorage.removeItem(VIEW_COUNT_KEY);\n        setViewCount(0);\n        setTimeLeft(null);\n      }\n    } else {\n      // No last claim, load saved view count if exists\n      const savedCount = localStorage.getItem(VIEW_COUNT_KEY);\n      if (savedCount) {\n        setViewCount(parseInt(savedCount));\n      }\n    }\n  }, []);\n\n  // Handle countdown timer\n  useEffect(() => {\n    if (timeLeft === null) return;\n\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev === null || prev <= 1000) {\n          clearInterval(timer);\n          // Clean up everything when timer ends\n          localStorage.removeItem(LAST_CLAIM_KEY);\n          localStorage.removeItem(VIEW_COUNT_KEY);\n          setViewCount(0);\n          return null;\n        }\n        return prev - 1000;\n      });\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, [timeLeft]);\n\n  const handleAdClick = useCallback(() => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      if (window.Telegram?.WebApp) {\n        window.Telegram.WebApp.openLink(ADSTERRA_DIRECT_LINK);\n      } else {\n        window.open(ADSTERRA_DIRECT_LINK, '_blank');\n      }\n\n      // Increment view count\n      const newCount = viewCount + 1;\n      setViewCount(newCount);\n      localStorage.setItem(VIEW_COUNT_KEY, newCount.toString());\n\n      // Call onAdComplete when all views are completed\n      if (newCount >= TOTAL_REQUIRED_VIEWS && onAdComplete) {\n        onAdComplete();\n      }\n    } catch (err) {\n      setError('Failed to load advertisement. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  }, [onAdComplete, viewCount]);\n\n  const handleClaim = async () => {\n    try {\n      setLoading(true);\n      const telegramUserId = localStorage.getItem('telegramUserId');\n      if (!telegramUserId) {\n        throw new Error('User ID not found');\n      }\n\n      const userDocRef = doc(db, 'users', telegramUserId);\n      await updateDoc(userDocRef, {\n        tickets: increment(1)\n      });\n\n      // Reset view count and set cooldown timestamp\n      localStorage.removeItem(VIEW_COUNT_KEY);\n      setViewCount(0);\n      \n      const now = Date.now();\n      localStorage.setItem(LAST_CLAIM_KEY, now.toString());\n      setTimeLeft(COOLDOWN_TIME);\n\n      if (onAdComplete) {\n        onAdComplete();\n      }\n    } catch (err) {\n      setError('Failed to claim reward. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatTimeLeft = (ms: number) => {\n    const seconds = Math.ceil(ms / 1000);\n    return `${seconds}s`;\n  };\n\n  return (\n    <Box //@ts-ignore\n      sx={{ \n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        gap: 1,\n      }}\n    >\n      <Button\n      fullWidth\n        variant=\"contained\"\n        onClick={viewCount >= TOTAL_REQUIRED_VIEWS ? handleClaim : handleAdClick}\n        disabled={disabled || loading || timeLeft !== null}\n        startIcon={viewCount >= TOTAL_REQUIRED_VIEWS ? null :   <img src={watchad} alt=\"\" width={32} />}\n        sx={{\n          backgroundColor: viewCount >= TOTAL_REQUIRED_VIEWS \n            ? 'rgba(76, 175, 80, 0.1)' \n            : 'rgba(110, 211, 255, 0.1)',\n          color: viewCount >= TOTAL_REQUIRED_VIEWS ? '#4caf50' : '#6ed3ff',\n          border: viewCount >= TOTAL_REQUIRED_VIEWS \n            ? '1px solid rgba(76, 175, 80, 0.5)' \n            : '1px solid rgba(110, 211, 255, 0.2)',\n          '&:hover': {\n            backgroundColor: viewCount >= TOTAL_REQUIRED_VIEWS \n              ? 'rgba(76, 175, 80, 0.2)' \n              : 'rgba(110, 211, 255, 0.2)',\n            border: viewCount >= TOTAL_REQUIRED_VIEWS \n              ? '1px solid rgba(76, 175, 80, 0.7)' \n              : '1px solid rgba(110, 211, 255, 0.3)',\n          },\n          '&:disabled': {\n            backgroundColor: 'rgba(255, 255, 255, 0.05)',\n            color: 'rgba(255, 255, 255, 0.3)',\n            border: '1px solid rgba(255, 255, 255, 0.1)',\n            opacity: 0.7,\n            cursor: 'not-allowed'\n          },\n          borderRadius: 2,\n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          textTransform: 'none',\n          fontSize: '0.95rem',\n          fontWeight: 600,\n          transition: 'all 0.2s ease'\n        }}\n      >\n        {loading ? (\n          <CircularProgress size={24} sx={{ color: 'inherit' }} />\n        ) : timeLeft !== null ? (\n          <>\n              <img src={watchad} alt=\"\" width={32} />\n            Earn Free Ticket\n          </>\n        ) : disabled ? (\n          <>\n            <Sparkles size={18} strokeWidth={1.5} />\n            Use Upgrade Ticket\n          </>\n        ) : viewCount >= TOTAL_REQUIRED_VIEWS ? (\n          <>\n            <Box component=\"img\" \n              src={ticket}\n              sx={{ width: 20, height: 20, mr: 1 }} \n            />\n            Claim 1 Ticket\n          </>\n        ) : (\n          <>\n            Earn Free Ticket\n            {viewCount > 0 && (\n              <Box\n                sx={{\n                  backgroundColor: 'rgba(255, 255, 255, 0.1)',\n                  borderRadius: '8px',\n                  px: 1,\n                  py: 0.5,\n                  fontSize: '0.85rem',\n                  ml: 1,\n                  border: '1px solid rgba(255, 255, 255, 0.1)'\n                }}\n              >\n                {viewCount}/{TOTAL_REQUIRED_VIEWS}\n              </Box>\n            )}\n          </>\n        )}\n      </Button>\n\n      {timeLeft !== null && (\n        <Typography \n          variant=\"body2\" \n          sx={{ \n            color: 'rgba(255, 255, 255, 0.5)',\n            display: 'flex',\n            alignItems: 'center',\n            gap: 1,\n            fontSize: '0.85rem',\n            mt: -1\n          }}\n        >\n          <RotatingIcon>\n            <Hourglass size={14} color=\"rgba(255, 255, 255, 0.5)\" />\n          </RotatingIcon>\n          {`Level Upgrade in ${formatTimeLeft(timeLeft)}`}\n        </Typography>\n      )}\n\n      {error && (\n        <Typography color=\"error\" variant=\"body2\" textAlign=\"center\">\n          {error}\n        </Typography>\n      )}\n    </Box>\n  );\n};\n\nexport default LevelUpgrade; ","export default \"__VITE_ASSET__ebn4q4Dt__\"","import React, { useState, useEffect } from 'react';\nimport { Box, Container, Typography, Button, CircularProgress, Grid, Card, TextField, InputAdornment, Tabs, Tab, Modal } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport gsap from 'gsap';\nimport BoxOpenAnimation from './BoxOpenAnimation';\nimport RewardDisplay from './RewardDisplay';\nimport KeyCrafting from './KeyCrafting';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { db } from '../../pages/firebase';\nimport { doc, updateDoc, increment, onSnapshot, getDoc } from 'firebase/firestore';\nimport { boxesData } from '../../data/boxesData';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { PackageOpenIcon } from 'lucide-react';\nimport StarIcon from '@mui/icons-material/Star';\nimport SwapDrawer from '../WalletDrawers/SwapDrawer';\nimport ticketImage from '../../assets/ticket.png';\nimport LevelUpgrade from '../Ads/1levelupgrade';\n\n// Import all box images\nimport alienwareImage from '../../assets/boxes/ALIENWARE.png';\nimport amazonImage from '../../assets/boxes/Amazon.png';\nimport landRoverImage from '../../assets/boxes/06_LANDROVER-Box-mock_box_1_pmWxJoo.png';\nimport rolexSubmarinerImage from '../../assets/boxes/06_ROLEX_SUBMARINER-Box-mock_box_HyKP6Wz.png';\nimport donaldTrumpImage from '../../assets/boxes/06-DONALD_TRUMP-Box-mock_box_1_Mtw3P4X.png';\nimport rolexYachtmasterImage from '../../assets/boxes/07_ROLEX_YACHTMASTER-Box-mock_box_1_AWKQOtA.png';\nimport rolexImage from '../../assets/boxes/19_ROLEX-Box-mock_box_Mf79Eyz.png';\nimport chanelImage from '../../assets/boxes/22-CHANEL-Box-mock_box_1_LJJWWSE.png';\nimport louisVuittonImage from '../../assets/boxes/LOUIS_VUITTON-Deluxe-mock_box.png';\nimport bmwImage from '../../assets/boxes/05-BMW-Box-mock_box_1_tcGgWnJ.png';\nimport primeImage from '../../assets/boxes/PRIME-Box-BLUE-mock_box_1_1_i1bhp4C.png';\nimport sneakersImage from '../../assets/boxes/SNEAKERS-Box-mock_box_1_1_XJ6yoyi.png';\nimport rolexDaytonaImage from '../../assets/boxes/01_ROLEX_DAYTONA-Box-mock_box_tgFf3C6.png';\nimport corsairImage from '../../assets/boxes/02-CORSAIR-Box-mock_box_1_9ex9nau.png';\nimport versaceImage from '../../assets/boxes/02-VERSACE-Box-mock_box_1_Eh0sKbn.png';\nimport footballImage from '../../assets/boxes/08_FOOTBALL_FRENZY-Box-mock_box_xTGy6uS.png';\nimport maseratiImage from '../../assets/boxes/09_MASERATI-Box-mock_box_nNGuE9m.png';\nimport topgImage from '../../assets/boxes/09-TOPG-Box-mock_box_1_DYOk6ka.png';\nimport porscheImage from '../../assets/boxes/11_PORSCHE-Box-mock_box_GsB1OjI.png';\nimport ferrariImage from '../../assets/boxes/12_FERRARI-Box-mock_box_1_gxu1E5e.png';\nimport oldMoneyImage from '../../assets/boxes/28_OLD_MONEY-Box-mock_box_1_NbdcPuo.png';\nimport cartierImage from '../../assets/boxes/Cartier_lC54zo9.png';\nimport diamondImage from '../../assets/boxes/Diamond-Vault_1_rL3pUUO.png';\nimport hublotImage from '../../assets/boxes/Hublot_wua9Wr6.png';\nimport giftboxImage from '../../assets/giftbox.png';\n\ninterface UserStats {\n  usdt: number;\n  total: number;\n  keys: number;\n  keyParts: number;\n  totalBoxes: number;\n  distributedBoxes: number;\n  giftBox: number;\n  boxes: Record<string, number>;\n  drops: Record<string, { code: string; amount: number; }[]>;\n  level: number;\n  tickets: number;\n}\n\ninterface GameCard {\n  id: string;\n  image: string;\n  title: string;\n  normalPrice: string;\n  salePrice: string;\n  description: string;\n  brand: string;\n}\n\ninterface DisplayReward {\n  code: string;\n  name: string;\n  image: string;\n  price: string;\n  rarity: number;\n  amount: number;\n}\n\nconst gameCards: GameCard[] = [\n  {\n    id: 'mystery-gift',\n    image: giftboxImage,\n    title: 'Mystery Gift Box',\n    normalPrice: 'FREE',\n    salePrice: 'FREE',\n    description: 'Get free boxes for every deposits',\n    brand: 'Special'\n  },\n  {\n    id: 'alienware',\n    image: alienwareImage,\n    title: 'ALIENWARE',\n    normalPrice: '16.89',\n    salePrice: '14.49',\n    description: 'Gaming gear from Alienware',\n    brand: 'Tech'\n  },\n  {\n    id: 'amazon',\n    image: amazonImage,\n    title: 'Amazon',\n    normalPrice: '10.49',\n    salePrice: '8.89',\n    description: 'Amazon mystery box with various items',\n    brand: 'Retail'\n  },\n  {\n    id: 'landrover',\n    image: landRoverImage,\n    title: 'Land Rover',\n    normalPrice: '199.99',\n    salePrice: '169.99',\n    description: 'Luxury SUV themed box with exclusive Land Rover items',\n    brand: 'Automotive'\n  },\n  {\n    id: 'rolex-submariner',\n    image: rolexSubmarinerImage,\n    title: 'Submariner',\n     normalPrice: '89.99',\n    salePrice: '85.45',\n    description: 'Luxury diving watch themed box',\n    brand: 'Luxury'\n  },\n  {\n    id: 'donald-trump',\n    image: donaldTrumpImage,\n    title: 'Donald Trump',\n    normalPrice: '6.99',\n    salePrice: '5.45',\n    description: 'Political memorabilia box',\n    brand: 'Politics'\n  },\n  {\n    id: 'rolex-yachtmaster',\n    image: rolexYachtmasterImage,\n    title: 'Yachtmaster',\n    normalPrice: '199.99',\n    salePrice: '149.99',\n    description: 'Luxury yacht watch themed box',\n    brand: 'Luxury'\n  },\n  {\n    id: 'rolex',\n    image: rolexImage,\n    title: 'Rolex Collection',\n normalPrice: '299.99',\n    salePrice: '249.99',\n    description: 'Premium Rolex collection box',\n    brand: 'Luxury'\n  },\n\n\n  {\n    id: 'chanel',\n    image: chanelImage,\n    title: 'Chanel',\n    normalPrice: '199.99',\n    salePrice: '169.99',\n    description: 'Luxury fashion box featuring Chanel items',\n    brand: 'Luxury'\n  },\n\n  {\n    id: 'louis-vuitton',\n    image: louisVuittonImage,\n    title: 'Louis Vuitton',\n    normalPrice: '99.99',\n    salePrice: '95.45',\n    description: 'Premium Louis Vuitton fashion items',\n    brand: 'Luxury'\n  },\n\n  {\n    id: 'bmw',\n    image: bmwImage,\n    title: 'BMW Box',\n    normalPrice: '189.99',\n    salePrice: '159.99',\n    description: 'BMW themed luxury automotive box',\n    brand: 'Automotive'\n  },\n  {\n    id: 'prime',\n    image: primeImage,\n    title: 'Prime Box',\n    normalPrice: '39.99',\n    salePrice: '34.99',\n    description: 'Premium selection mystery box',\n    brand: 'Various'\n  },\n  {\n    id: 'sneakers',\n    image: sneakersImage,\n    title: 'Sneakers Box',\n    normalPrice: '29.99', \n    salePrice: '19.99',\n    description: 'Premium sneaker collection box',\n    brand: 'Fashion'\n  },\n\n\n  {\n    id: 'rolex-daytona',\n    image: rolexDaytonaImage,\n    title: 'Rolex Daytona',\n    normalPrice: '299.99',\n    salePrice: '249.99',\n    description: 'Luxury racing watch themed box',\n    brand: 'Luxury'\n  },\n  {\n    id: 'corsair',\n    image: corsairImage,\n    title: 'Corsair Gaming',\n    normalPrice: '49.99',\n    salePrice: '45.99',\n    description: 'Premium gaming gear box',\n    brand: 'Tech'\n  },\n  {\n    id: 'versace',\n    image: versaceImage,\n    title: 'Versace',\n    normalPrice: '149.99',\n    salePrice: '119.99',\n    description: 'Luxury Italian fashion box',\n    brand: 'Luxury'\n  },\n\n\n  {\n    id: 'football-frenzy',\n    image: footballImage,\n    title: 'Football Frenzy',\n    normalPrice: '9.99',\n    salePrice: '7.45',\n    description: 'Football themed mystery box',\n    brand: 'Sports'\n  },\n  {\n    id: 'maserati',\n    image: maseratiImage,\n    title: 'Maserati',\n    normalPrice: '299.99',\n    salePrice: '249.99',\n    description: 'Italian luxury automotive box',\n    brand: 'Automotive'\n  },\n\n  {\n    id: 'topg',\n    image: topgImage,\n    title: 'Top G',\n    normalPrice: '49.99',\n    salePrice: '45.50',\n    description: 'Premium lifestyle box',\n    brand: 'Lifestyle'\n  },\n  {\n    id: 'porsche',\n    image: porscheImage,\n    title: 'Porsche',\n    normalPrice: '149.99',\n    salePrice: '125.45',\n    description: 'Sports car themed luxury box',\n    brand: 'Automotive'\n  },\n  {\n    id: 'ferrari',\n    image: ferrariImage,\n    title: 'Ferrari',\n    normalPrice: '199.99',\n    salePrice: '149.99',\n    description: 'Italian supercar themed box',\n    brand: 'Automotive'\n  },\n\n\n  {\n    id: 'old-money',\n    image: oldMoneyImage,\n    title: 'Old Money',\n    normalPrice: '29.99',\n    salePrice: '24.99',\n    description: 'Classic luxury lifestyle box',\n    brand: 'Lifestyle'\n  },\n\n\n  {\n    id: 'cartier',\n    image: cartierImage,\n    title: 'Cartier',\n    normalPrice: '199.99',\n    salePrice: '149.99',\n    description: 'Luxury jewelry themed box',\n    brand: 'Luxury'\n  },\n  {\n    id: 'diamond-vault',\n    image: diamondImage,\n    title: 'Diamond Vault',\n    normalPrice: '199.99',\n    salePrice: '159.99',\n    description: 'Premium diamond jewelry box',\n    brand: 'Luxury'\n  },\n  {\n    id: 'hublot',\n    image: hublotImage,\n    title: 'Hublot',\n    normalPrice: '99.99',\n    salePrice: '89.99',\n    description: 'Luxury Swiss watch themed box',\n    brand: 'Luxury'\n  }\n\n];\n\n// Renk değişiklikleri için stil güncellemeleri\nconst commonStyles = {\n  primaryColor: '#6ed3ff',\n  primaryGradient: 'linear-gradient(90deg, #6ed3ff, #8ee9ff)',\n  bgGradient: 'linear-gradient(135deg, rgba(110, 211, 255, 0.3) 0%, rgba(110, 211, 255, 0.1) 100%)',\n  borderColor: 'rgba(110, 211, 255, 0.2)',\n  hoverBorderColor: 'rgba(110, 211, 255, 0.4)',\n  buttonShadow: '0 4px 12px rgba(110, 211, 255, 0.3)',\n  buttonHoverShadow: '0 6px 16px rgba(110, 211, 255, 0.4)',\n};\n\n// Tab değerlerini enum olarak tanımla\ntype TabType = 'boxes' | 'drops' | 'craft';\n\nconst BoxOpening: React.FC = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [userStats, setUserStats] = useState<UserStats | null>(null);\n  const [isOpening, setIsOpening] = useState(false);\n  const [currentReward, setCurrentReward] = useState<DisplayReward | null>(null);\n  const [showReward, setShowReward] = useState(false);\n  const [isCrafting, setIsCrafting] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [sortByPrice, setSortByPrice] = useState<'asc' | 'desc'>('asc');\n  const [currentTab, setCurrentTab] = useState<TabType>('boxes');\n  const [dropsSortBy, setDropsSortBy] = useState<'price' | 'rarity'>('price');\n  const [showLevelModal, setShowLevelModal] = useState(false);\n  const [, setSelectedDrop] = useState<any>(null);\n  const [isUpgrading, setIsUpgrading] = useState(false);\n  const [ticketError, setTicketError] = useState('');\n  const [showLevelUpSuccess, setShowLevelUpSuccess] = useState(false);\n  const [showSwapDrawer, setShowSwapDrawer] = useState(false);\n\n  // Get box count helper function\n  const getBoxCount = React.useCallback((card: GameCard) => {\n    if (!userStats) return 0;\n    if (card.id === 'mystery-gift') {\n      return userStats.giftBox || 0;\n    }\n    \n    const boxData = boxesData[card.id];\n    if (!boxData) {\n      console.log('Box not found:', card.id);\n      return 0;\n    }\n    \n    return userStats.boxes?.[boxData.title] || 0;\n  }, [userStats]);\n\n  useEffect(() => {\n    // defaultTab state'i geldiğinde currentTab'i güncelle\n    if (location.state?.defaultTab) {\n      setCurrentTab(location.state.defaultTab);\n      // State'i temizle ki geri geldiğinde yine boxes tab'inde başlasın\n      navigate(location.pathname, { replace: true });\n    }\n  }, [location.state]);\n\n  useEffect(() => {\n    const telegramUserId = localStorage.getItem(\"telegramUserId\");\n    if (!telegramUserId) {\n      navigate('/spin');\n      return;\n    }\n\n    const unsubscribe = onSnapshot(\n      doc(db, 'users', telegramUserId),\n      (doc) => {\n        if (doc.exists()) {\n          const userData = doc.data() as UserStats;\n          setUserStats(userData);\n          // Debug için boxes verilerini konsola yazdır\n          console.log('Firebase Boxes:', userData.boxes);\n          console.log('Game Cards:', gameCards.map(card => card.title));\n        } else {\n          setError('Kullanıcı verisi bulunamadı');\n        }\n        setLoading(false);\n      },\n      (error) => {\n        console.error('Error fetching user stats:', error);\n        setError('Veriler yüklenirken hata oluştu');\n        setLoading(false);\n      }\n    );\n\n    return () => unsubscribe();\n  }, [navigate]);\n\n  const handleCardClick = (cardId: string) => {\n    navigate(`/box/${cardId}`);\n  };\n\n  const handleCloseReward = () => {\n    setShowReward(false);\n    setCurrentReward(null);\n  };\n\n\n  const handleCraftKey = async () => {\n    const telegramUserId = localStorage.getItem(\"telegramUserId\");\n    if (!userStats || userStats.keyParts < 5) {\n      setError('Yetersiz anahtar parçası');\n      return;\n    }\n\n    setError(null);\n    setIsCrafting(true);\n\n    try {\n      const userRef = doc(db, 'users', telegramUserId!);\n      await updateDoc(userRef, {\n        keyParts: increment(-5),\n        keys: increment(1),\n      });\n\n      gsap.to(document.body, {\n        duration: 0.2,\n        scale: 1.02,\n        yoyo: true,\n        repeat: 1,\n        ease: \"power2.inOut\"\n      });\n    } catch (error) {\n      console.error('Error crafting key:', error);\n      setError('Anahtar oluşturulurken bir hata oluştu');\n    } finally {\n      setIsCrafting(false);\n    }\n  };\n\n  const renderMyDrops = () => {\n    // Drops verilerinin varlığını kontrol et\n    if (!userStats?.drops || Object.keys(userStats.drops).length === 0) {\n      return (\n        <Box //@ts-ignore\n          sx={{\n            textAlign: 'center',\n            py: 3,\n            px: 3,\n            background: commonStyles.bgGradient,\n            borderRadius: '15px',\n            border: `1px solid ${commonStyles.borderColor}`,\n            maxWidth: '600px', \n            margin: '0 auto'\n          }}\n        >\n          <Typography variant=\"h5\" sx={{ \n            color: 'white',\n            fontWeight: 'bold',\n       mt:-1,\n          }}>\n            No Items Found\n          </Typography>\n          \n          <Typography sx={{ \n            color: 'rgba(255,255,255,0.7)',\n            fontSize: '1rem',\n            mb: 3,\n            maxWidth: '400px',\n            margin: '0 auto'\n          }}>\n            Start your collection by opening mystery boxes and discover amazing rewards!\n          </Typography>\n\n          <Box sx={{ \n            display: 'flex', \n         \n            justifyContent: 'center',\n            flexWrap: 'wrap'\n          }}>\n            <Button\n              onClick={() => setCurrentTab('boxes')}\n              variant=\"contained\"\n              sx={{\n                background: commonStyles.primaryGradient,\n                color: 'black',\n                py: 1.5,\n                \n                fontSize: '0.95rem',\n                fontWeight: 'bold',\n                textTransform: 'none',\n                borderRadius: '8px',\n                boxShadow: commonStyles.buttonShadow,\n                mt:2,\n              }}\n            >\n              Open Boxes\n            </Button>\n          </Box>\n        </Box>\n      );\n    }\n\n    let allDrops = Object.entries(userStats.drops).flatMap(([boxTitle, drops]) =>\n      drops.map(drop => {\n        // Find the box data using the exact title\n        const boxData = Object.values(boxesData).find(box => box.title === boxTitle);\n        const dropData = boxData?.drops.find(d => d.code === drop.code);\n        \n        return {\n          ...drop,\n          boxTitle,\n          name: dropData?.name || 'Unknown Item',\n          image: dropData?.image || '',\n          price: dropData?.price || '0',\n          rarity: dropData?.rarity || 0\n        };\n      })\n    );\n\n    // Filter and sort drops...\n    allDrops = allDrops.filter(drop => {\n      const searchString = searchTerm.toLowerCase();\n      return (\n        drop.name.toLowerCase().includes(searchString) ||\n        drop.boxTitle.toLowerCase().includes(searchString)\n      );\n    });\n\n    allDrops.sort((a, b) => {\n      switch (dropsSortBy) {\n        case 'price':\n          return sortByPrice === 'asc' \n            ? parseFloat(a.price) - parseFloat(b.price)\n            : parseFloat(b.price) - parseFloat(a.price);\n        case 'rarity':\n          return sortByPrice === 'asc'\n            ? a.rarity - b.rarity\n            : b.rarity - a.rarity;\n        default:\n          return 0;\n      }\n    });\n\n    return (\n      <Box>\n        {/* Drops Summary */}\n        <Box sx={{ \n          mb: 3, \n          p: 3, \n          borderRadius: '15px', \n          background: 'rgba(110, 211, 255, 0.05)',\n          border: `1px solid ${commonStyles.borderColor}`\n        }}>\n          <Typography variant=\"h6\" sx={{ color: 'white', mb: 2 }}>\n            My Collection Summary\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={4}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography sx={{ color: 'rgba(255,255,255,0.7)', fontSize: '0.9rem' }}>\n                  Total Items\n                </Typography>\n                <Typography sx={{ color: commonStyles.primaryColor, fontWeight: 'bold', fontSize: '1.5rem' }}>\n                  {allDrops.length}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={4}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography sx={{ color: 'rgba(255,255,255,0.7)', fontSize: '0.9rem' }}>\n                  Total Value\n                </Typography>\n                <Typography sx={{ color: commonStyles.primaryColor, fontWeight: 'bold', fontSize: '1.5rem' }}>\n                  ${allDrops.reduce((sum, drop) => sum + parseFloat(drop.price) * drop.amount, 0).toFixed(2)}\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={4}>\n              <Box sx={{ textAlign: 'center' }}>\n                <Typography sx={{ color: 'rgba(255,255,255,0.7)', fontSize: '0.9rem' }}>\n                  Uniques\n                </Typography>\n                <Typography sx={{ color: commonStyles.primaryColor, fontWeight: 'bold', fontSize: '1.5rem' }}>\n                  {new Set(allDrops.map(drop => drop.boxTitle)).size}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </Box>\n\n        {/* Sort Controls */}\n        <Box sx={{ \n          mb: 3, \n          display: 'flex',\n          alignItems: 'center',\n          gap: 1,\n          width: '100%'\n        }}>\n          <Box sx={{ \n            display: 'flex', \n            gap: 1, \n            flex: 2\n          }}>\n            {['price', 'rarity'].map((sortType) => (\n              <Button\n                key={sortType}\n                onClick={() => setDropsSortBy(sortType as 'price' | 'rarity')}\n                variant={dropsSortBy === sortType ? 'contained' : 'outlined'}\n                size=\"small\"\n                fullWidth\n                sx={{\n                  color: dropsSortBy === sortType ? 'white' : 'rgba(255,255,255,0.7)',\n                  borderColor: commonStyles.borderColor,\n                  backgroundColor: dropsSortBy === sortType ? commonStyles.primaryColor : 'transparent',\n                  '&:hover': {\n                    backgroundColor: dropsSortBy === sortType ? '#8ee9ff' : 'rgba(110, 211, 255, 0.1)'\n                  },\n                  fontSize: '0.8rem',\n                  letterSpacing: 0.1,\n                  textTransform: 'none',\n                  height: '36px'\n                }}\n              >\n                {sortType.charAt(0).toUpperCase() + sortType.slice(1)}\n              </Button>\n            ))}\n          </Box>\n          <Button\n            onClick={() => setSortByPrice(prev => prev === 'asc' ? 'desc' : 'asc')}\n            variant=\"outlined\"\n            size=\"small\"\n            fullWidth\n            sx={{\n              flex: 1,\n              color: 'white',\n              borderColor: commonStyles.borderColor,\n              fontSize: '0.8rem',\n              letterSpacing: 0.1,\n              textTransform: 'none',\n              height: '36px'\n            }}\n          >\n            {sortByPrice === 'asc' ? '↑ Ascending' : '↓ Descending'}\n          </Button>\n        </Box>\n\n        {/* Drops Grid */}\n        <Grid container spacing={2}>\n          {allDrops.map((drop, index) => (\n            <Grid item xs={12} sm={6} md={4} key={`${drop.code}-${index}`}>\n              <motion.div\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.5, delay: index * 0.1 }}\n              >\n                <Card sx={{\n                  position: 'relative',\n                  background: 'linear-gradient(145deg, rgba(26,27,35,0.9) 0%, rgba(26,27,35,0.95) 100%)',\n                  borderRadius: '15px',\n                  overflow: 'hidden',\n                  border: `1px solid ${commonStyles.borderColor}`,\n                  height: '100%',\n                  transition: 'transform 0.2s',\n                  minHeight: '420px',\n                }}>\n                  {/* Image Container */}\n                  <Box sx={{ \n                    position: 'relative', \n                    pt: '75%',\n                    background: 'linear-gradient(45deg, rgba(108,93,211,0.1) 0%, rgba(108,93,211,0.05) 100%)'\n                  }}>\n                    <Box\n                      component=\"img\"\n                      src={drop.image}\n                      alt={drop.name}\n                      sx={{\n                        position: 'absolute',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        mb:1,\n                        objectFit: 'contain',\n                        p: 0.5\n                      }}\n                    />\n                    {/* Rarity Badge */}\n                    <Box //ts-ignore\n                    sx={{\n                      position: 'absolute',\n                      top: 10,\n                      right: 10,\n                      background: 'rgba(108,93,211,0.9)',\n                      borderRadius: '12px',\n                      px: 1.5,\n                      py: 0.5\n                    }}>\n                      <Typography sx={{ color: 'white', fontSize: '0.8rem', fontWeight: 'bold' }}>\n                        {(drop.rarity * 100).toFixed(2)}% Rare\n                      </Typography>\n                    </Box>\n                  </Box>\n\n                  {/* Content */}\n                  <Box //ts-ignore\n                  sx={{ p: 2 }}>\n                    {/* Title and Source */}\n                    <Box sx={{ mb: 2 }}>\n                      <Typography variant=\"h6\" sx={{ \n                        color: 'white', \n                        fontWeight: 'bold', \n                        fontSize: '1.1rem',\n                        mb: 0.5\n                      }}>\n                        {drop.name}\n                      </Typography>\n                      <Typography sx={{ \n                        color: 'rgba(255,255,255,0.7)', \n                        fontSize: '0.85rem',\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 0.5\n                      }}>\n                        From: {drop.boxTitle}\n                      </Typography>\n                    </Box>\n\n                    {/* Price and Amount */}\n                    <Box //ts-ignore\n                     sx={{\n                      display: 'flex',\n                      justifyContent: 'space-between',\n                      alignItems: 'center',\n                      background: 'rgba(108,93,211,0.1)',\n                      borderRadius: '12px',\n                      p: 1.5,\n                      mb: 2\n                    }}>\n                      <Box>\n                        <Typography sx={{ color: 'rgba(255,255,255,0.7)', fontSize: '0.8rem' }}>\n                          Value\n                        </Typography>\n                        <Typography sx={{ color: commonStyles.primaryColor, fontWeight: 'bold', fontSize: '1.2rem' }}>\n                          ${drop.price}\n                        </Typography>\n                      </Box>\n                      <Box sx={{ textAlign: 'right' }}>\n                        <Typography sx={{ color: 'rgba(255,255,255,0.7)', fontSize: '0.8rem' }}>\n                          Amount\n                        </Typography>\n                        <Typography sx={{ color: commonStyles.primaryColor, fontWeight: 'bold', fontSize: '1.2rem' }}>\n                          {drop.amount}x\n                        </Typography>\n                      </Box>\n                    </Box>\n\n                    {/* Sell Item Button */}\n                    <Button\n                      variant=\"contained\"\n                      fullWidth\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        handleSellItem(drop);\n                      }}\n                      sx={{\n                        background: 'linear-gradient(90deg, #6ed3ff, #8ee9ff)',\n                        color: 'black',\n                        py: 1.5,\n                        fontSize: '0.95rem',\n                        fontWeight: 'bold',\n                        textTransform: 'none',\n                        borderRadius: '8px',\n                        boxShadow: '0 4px 12px rgba(110,211,255,0.3)',\n                        '&:hover': {\n                          background: 'linear-gradient(90deg, #8ee9ff, #6ed3ff)',\n                          boxShadow: '0 6px 16px rgba(110,211,255,0.4)',\n                        }\n                      }}\n                    >\n                      Sell Item for ${(parseFloat(drop.price) * drop.amount).toFixed(2)}\n                    </Button>\n                  </Box>\n                </Card>\n              </motion.div>\n            </Grid>\n          ))}\n        </Grid>\n      </Box>\n    );\n  };\n\n  // Update getLevelRequirements function\n\n  // Update handleLevelUpgrade function\n  const handleLevelUpgrade = async () => {\n    setIsUpgrading(true);\n    setTicketError('');\n\n    const telegramUserId = localStorage.getItem(\"telegramUserId\");\n    if (!telegramUserId) {\n      setTicketError('User ID not found');\n      setIsUpgrading(false);\n      return;\n    }\n\n    try {\n      const userRef = doc(db, \"users\", telegramUserId);\n      const userDoc = await getDoc(userRef);\n      \n      if (!userDoc.exists()) {\n        setTicketError('User data not found');\n        setIsUpgrading(false);\n        return;\n      }\n\n      const userData = userDoc.data();\n      const currentLevel = userData.level || 0;\n      const nextLevel = currentLevel + 1;\n      const requiredTickets = nextLevel;\n      \n      if (!userData.tickets || userData.tickets < requiredTickets) {\n        setTicketError(`Not enough tickets. Need ${requiredTickets} tickets for level ${nextLevel}`);\n        setIsUpgrading(false);\n        return;\n      }\n\n      await updateDoc(userRef, {\n        level: nextLevel,\n        tickets: userData.tickets - requiredTickets,\n        lastLevelUpgrade: new Date().toISOString(),\n        upgradeTransaction: {\n          amount: requiredTickets,\n          timestamp: new Date().toISOString(),\n          type: 'TICKET_UPGRADE',\n          fromLevel: currentLevel,\n          toLevel: nextLevel\n        }\n      });\n\n      setShowLevelModal(false);\n      setShowLevelUpSuccess(true);\n      \n      setTimeout(() => {\n        setShowLevelUpSuccess(false);\n      }, 2000);\n\n    } catch (error) {\n      console.error(\"Error processing level upgrade:\", error);\n      setTicketError('Failed to process upgrade. Please try again.');\n    } finally {\n      setIsUpgrading(false);\n    }\n  };\n\n  // Update handleSellItem function\n  const handleSellItem = async (drop: any) => {\n    const telegramUserId = localStorage.getItem(\"telegramUserId\");\n    if (!telegramUserId) return;\n\n    const currentLevel = userStats?.level || 0;\n    if (currentLevel < 200) {\n      setSelectedDrop(drop);\n      setShowLevelModal(true);\n      return;\n    }\n\n    // TODO: Implement actual sell functionality\n    console.log('Selling item:', drop);\n  };\n\n  if (loading) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Box \n        //@ts-ignore\n        sx={{\n           display: 'flex', \n           justifyContent: 'center', \n           alignItems: 'center', \n           minHeight: '60vh' \n           }}>\n\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt:-5, pb: 25 }}>\n        {/* Search Bar - Only show for boxes and drops tabs */}\n        {currentTab !== 'craft' && (\n          <Box sx={{ mb: 4 }}>\n            <Box sx={{ display: 'flex', gap: 2, alignItems: 'stretch' }}>\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                placeholder={currentTab === 'boxes' ? \"Search boxes...\" : \"Search drops...\"}\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n                InputProps={{\n                  startAdornment: (\n                    <InputAdornment position=\"start\">\n                      <SearchIcon sx={{ color: 'white' }} />\n                    </InputAdornment>\n                  ),\n                  sx: {\n                    color: 'white',\n                    height: '100%',\n                    '& .MuiOutlinedInput-root': {\n                      height: '100%'\n                    },\n                    '& .MuiOutlinedInput-notchedOutline': {\n                      borderColor: 'rgba(255,255,255,0.2)',\n                    },\n                  },\n                }}\n                sx={{\n                  '& .MuiInputBase-root': {\n                    height: '48px'\n                  }\n                }}\n              />\n              {currentTab === 'boxes' && (\n                <Button\n                  onClick={() => setSortByPrice(prev => prev === 'asc' ? 'desc' : 'asc')}\n                  sx={{\n                    color: 'white',\n                    borderColor: 'rgba(255,255,255,0.2)',\n                    fontSize: '0.8rem',\n                    letterSpacing: 0.1,\n                    textTransform: 'none',\n                    minWidth: '120px',\n                    height: '48px'\n                  }}\n                  variant=\"outlined\"\n                >\n                  Price {sortByPrice === 'asc' ? '↑' : '↓'}\n                </Button>\n              )}\n            </Box>\n          </Box>\n        )}\n\n        {/* Games Banner */}\n        {currentTab !== 'craft' && (\n          <Box \n            onClick={() => navigate('/games')}\n            sx={{ \n              mb: 4,\n              background: commonStyles.bgGradient,\n              borderRadius: '15px',\n              overflow: 'hidden',\n              cursor: 'pointer',\n              position: 'relative',\n              border: `1px solid ${commonStyles.borderColor}`,\n              transition: 'all 0.3s ease',\n              p: 2.5,\n              '&:hover': {\n                border: `1px solid ${commonStyles.hoverBorderColor}`,\n                boxShadow: commonStyles.buttonHoverShadow,\n                '& .hover-effect': {\n                  transform: 'translateY(-2px)'\n                }\n              }\n            }}\n          >\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 2.5, mb: 2 }}>\n              <Box sx={{ \n                width: '52px', \n                height: '52px', \n                borderRadius: '12px',\n                background: commonStyles.primaryGradient,\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexShrink: 0,\n                boxShadow: commonStyles.buttonShadow\n              }}>\n                <Typography sx={{ \n                  color: 'white', \n                  fontWeight: 'bold', \n                  fontSize: '1.8rem'\n                }}>\n                  💎\n                </Typography>\n              </Box>\n              <Box>\n                <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 0.5 }}>\n                  <Typography sx={{ \n                    color: commonStyles.primaryColor,\n                    fontWeight: 'bold',\n                    fontSize: '1.2rem',\n                  }}>\n                    999,999 TON\n                  </Typography>\n                  <Typography sx={{\n                    color: 'black',\n                    fontSize: '0.8rem',\n                    background: commonStyles.primaryGradient,\n                    px: 1,\n                    py: 0.2,\n                    borderRadius: '4px',\n                    fontWeight: 'bold'\n                  }}>\n                    PRIZE POOL\n                  </Typography>\n                </Box>\n                <Typography sx={{ \n                  color: 'rgba(255,255,255,0.8)',\n                  fontSize: '0.9rem',\n                  fontWeight: '500'\n                }}>\n                  Play games & win massive rewards!\n                </Typography>\n              </Box>\n            </Box>\n            <Box\n             className=\"hover-effect\" \n             sx={{ \n              width: '100%',\n              transition: 'transform 0.3s ease'\n            }}>\n              <Button\n                variant=\"contained\"\n                fullWidth\n                sx={{\n                  background: commonStyles.primaryGradient,\n                    color: 'black',\n                  textTransform: 'none',\n                  py: 1.5,\n                  fontSize: '0.95rem',\n                  fontWeight: 'bold',\n                  boxShadow: commonStyles.buttonShadow,\n                  '&:hover': {\n                    background: 'linear-gradient(90deg, #8ee9ff, #6ed3ff)',\n                    boxShadow: commonStyles.buttonHoverShadow\n                  }\n                }}\n              >\n                Play Now →\n              </Button>\n            </Box>\n          </Box>\n        )}\n\n        {/* Tab Bar */}\n        <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\n          <Tabs \n            value={currentTab} \n            onChange={(_: any, newValue: TabType) => setCurrentTab(newValue)}\n            sx={{\n              '& .MuiTab-root': {\n                color: 'rgba(255,255,255,0.7)',\n                textTransform: 'none',\n                '&.Mui-selected': {\n                  color: commonStyles.primaryColor\n                }\n              },\n              '& .MuiTabs-indicator': {\n                backgroundColor: commonStyles.primaryColor\n              }\n            }}\n          >\n            <Tab label=\"Boxes\" value=\"boxes\" />\n            <Tab label=\"Sell items\" value=\"drops\" />\n            <Tab label=\"Craft\" value=\"craft\" />\n          </Tabs>\n        </Box>\n\n        {error && (\n          <Typography sx={{ color: '#ff4444', mb: 2, textAlign: 'center' }}>\n            {error}\n          </Typography>\n        )}\n\n        {/* Content based on selected tab */}\n        {currentTab === 'boxes' && (\n          <Grid container spacing={1}>\n            {gameCards\n              .sort((a, b) => {\n                // Mystery Gift Box her zaman en üstte\n                if (a.id === 'mystery-gift') return -1;\n                if (b.id === 'mystery-gift') return 1;\n\n                // Kullanıcının sahip olduğu kutuları bul\n                const aBoxCount = getBoxCount(a);\n                const bBoxCount = getBoxCount(b);\n\n                // Sahip olunan kutular üstte\n                if (aBoxCount > 0 && bBoxCount === 0) return -1;\n                if (aBoxCount === 0 && bBoxCount > 0) return 1;\n\n                // Aynı durumdaki kutular için fiyat sıralaması\n                return parseFloat(a.salePrice) - parseFloat(b.salePrice);\n              })\n              .map((card) => (\n                <Grid item xs={6} key={card.id}>\n                  <motion.div\n                    initial={{ opacity: 0, y: 20 }}\n                    animate={{ opacity: 1, y: 0 }}\n                    transition={{ duration: 0.5 }}\n                  >\n                    <Card\n                      onClick={() => handleCardClick(card.id)}\n                      sx={{\n                        position: 'relative',\n                        background: card.id === 'mystery-gift' \n                          ? 'linear-gradient(145deg, rgba(108,93,211,0.2) 0%, rgba(108,93,211,0.3) 100%)'\n                          : 'linear-gradient(145deg, rgba(26,27,35,0.9) 0%, rgba(26,27,35,0.95) 100%)',\n                        borderRadius: '15px',\n                        overflow: 'hidden',\n                        cursor: 'pointer',\n                        transition: 'transform 0.2s, box-shadow 0.2s',\n                        border: card.id === 'mystery-gift'\n                          ? '1px solid rgba(108,93,211,0.4)'\n                          : `1px solid ${commonStyles.borderColor}`,\n                        height: '100%',\n                        minHeight: '330px',\n                      }}\n                    >\n                      {/* Box Count Badge */}\n                      <Box \n                      //@ts-ignore\n                      sx={{\n                        position: 'absolute',\n                        top: 10,\n                        left: 10,\n                        background: commonStyles.primaryGradient,\n                        color: 'black',\n                        px: 1.5,\n                        py: 0.5,\n                        borderRadius: '8px',\n                        fontSize: '0.8rem',\n                        fontWeight: 'bold',\n                        zIndex: 1,\n                        display: 'flex',\n                        alignItems: 'center',\n                        gap: 0.5\n                      }}>\n                        <PackageOpenIcon size={16} />\n                        {getBoxCount(card)}\n                      </Box>\n\n                      {card.id === 'mystery-gift' && (\n                        <Box sx={{\n                          position: 'absolute',\n                          top: 10,\n                          right: 10,\n                          background: 'linear-gradient(90deg, #6C7BDC, #6C7BDC80)',\n                          color: 'white',\n                          px: 1,\n                          py: 0.5,\n                          borderRadius: '20px',\n                          fontSize: '0.8rem',\n                          fontWeight: 'bold',\n                          zIndex: 1\n                        }}>\n                          FREE\n                        </Box>\n                      )}\n                      <Box\n                        component=\"img\"\n                        src={card.image}\n                        alt={card.title}\n                        sx={{\n                          width: '100%',\n                          height: '200px',\n                          mt:-3,\n                          mb:-7,\n                          objectFit: 'contain',\n                          p: 1,\n                        }}\n                      />\n                      <Box sx={{ p: 2 }}>\n                        <Typography\n                          variant=\"h6\"\n                          sx={{\n                            color: 'white',\n                            fontWeight: 'bold',\n                            fontSize: '1rem',\n                          }}\n                        >\n                          {card.title}\n                        </Typography>\n                        <Typography\n                          sx={{\n                            color: 'rgba(255,255,255,0.7)',\n                            mb: 2,\n                            fontSize: '0.9rem',\n                            height: '40px',\n                            overflow: 'hidden',\n                          }}\n                        >\n                          {card.description}\n                        </Typography>\n                      \n                        <Box sx={{\n                          display: 'flex',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                        }}>\n                          {card.id === 'mystery-gift' ? (\n                            <Box sx={{ width: '100%', height: '24px' }} />\n                          ) : (\n                            <>\n                              <Typography\n                                sx={{\n                                  color: 'rgba(255,255,255,0.5)',\n                                  textDecoration: 'line-through',\n                                  fontSize: '0.9rem',\n                                }}\n                              >\n                                ${card.normalPrice}\n                              </Typography>\n                              <Typography\n                                sx={{\n                                  color: commonStyles.primaryColor,\n                                  fontWeight: 'bold',\n                                  fontSize: '1.2rem',\n                                }}\n                              >\n                                ${card.salePrice}\n                              </Typography>\n                            </>\n                          )}\n                        </Box>\n                        <Button\n                          onClick={() => handleCardClick(card.id)}\n                          variant=\"contained\"\n                          fullWidth\n                          sx={{\n                            mt: 1,\n                            textTransform: 'none',\n                            background: card.id === 'mystery-gift'\n                              ? 'linear-gradient(90deg, #0088CC, #00A3FF)'\n                              : commonStyles.primaryGradient,\n                            color: 'black',\n                          }}\n                        >\n                          {card.id === 'mystery-gift' ? 'Open Free Box' : 'Open Box'}\n                        </Button>\n                      </Box>\n                    </Card>\n                  </motion.div>\n                </Grid>\n              ))}\n          </Grid>\n        )}\n\n        {currentTab === 'drops' && renderMyDrops()}\n\n        {currentTab === 'craft' && (\n          <Box sx={{ maxWidth: '600px', margin: '0 auto' }}>\n            <KeyCrafting\n              keyParts={userStats?.keyParts || 0}\n              onCraftKey={handleCraftKey}\n              isLoading={isCrafting}\n              onOpenFreeBox={() => handleCardClick('mystery-gift')}\n            />\n          </Box>\n        )}\n\n        {/* Box Opening Animation Modal */}\n        <BoxOpenAnimation\n          isOpening={isOpening}\n          onAnimationComplete={() => {\n            setIsOpening(false);\n            setShowReward(true);\n          }}\n          onClose={() => setIsOpening(false)}\n        />\n\n        {/* Reward Display Modal */}\n        {currentReward && (\n          <RewardDisplay\n            reward={currentReward}\n            isVisible={showReward}\n            onClose={handleCloseReward}\n          />\n        )}\n\n        {/* SwapDrawer Component */}\n        <SwapDrawer\n          open={showSwapDrawer}\n          onClose={() => setShowSwapDrawer(false)}\n        />\n\n        {/* Level Requirement Modal */}\n        <Modal\n          open={showLevelModal}\n          onClose={() => setShowLevelModal(false)}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            zIndex: 1100\n          }}\n        >\n          <Box sx={{\n            backgroundColor: 'rgba(18, 22, 25, 0.95)',\n            backdropFilter: 'blur(20px)',\n            borderRadius: '24px',\n            padding: '32px',\n            width: '90%',\n            maxWidth: '360px',\n            border: '1px solid rgba(110, 211, 255, 0.1)',\n            outline: 'none',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '24px',\n            position: 'relative',\n            zIndex: 9999\n          }}>\n            <Box sx={{ \n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              gap: 3,\n              width: '100%'\n            }}>\n              {/* Header Section */}\n              <Box sx={{ \n                width: '100%',\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                gap: 2\n              }}>\n                <Box sx={{ \n                  width: '80px', \n                  height: '80px', \n                  position: 'relative',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}>\n                  <Box\n                    component=\"img\"\n                    src={ticketImage}\n                    alt=\"Upgrade Ticket\"\n                    sx={{\n                      width: '100%',\n                      height: '100%',\n                      objectFit: 'contain',\n                      animation: 'float 3s ease-in-out infinite',\n                      '@keyframes float': {\n                        '0%, 100%': {\n                          transform: 'translateY(0)',\n                        },\n                        '50%': {\n                          transform: 'translateY(-10px)',\n                        },\n                      },\n                    }}\n                  />\n                  <Box sx={{\n                    position: 'absolute',\n                    width: '100%',\n                    height: '10px',\n                    bottom: '-15px',\n                    background: 'radial-gradient(ellipse at center, rgba(110, 211, 255, 0.3) 0%, rgba(110, 211, 255, 0) 70%)',\n                    animation: 'shadow 3s ease-in-out infinite',\n                    '@keyframes shadow': {\n                      '0%, 100%': {\n                        transform: 'scale(1)',\n                        opacity: 0.3,\n                      },\n                      '50%': {\n                        transform: 'scale(0.7)',\n                        opacity: 0.1,\n                      },\n                    },\n                  }} />\n                </Box>\n                <Box sx={{ textAlign: 'center' }}>\n                  <Typography sx={{ \n                    color: 'white', \n                    fontSize: '20px', \n                    fontWeight: '600',\n                    mb: 1\n                  }}>\n                    Level Upgrade Required\n                  </Typography>\n                  <Typography sx={{ \n                    color: 'rgba(255, 255, 255, 0.7)', \n                    fontSize: '14px',\n                    lineHeight: 1.5\n                  }}>\n                    You need to upgrade your level to sell items !!!\n                  </Typography>\n                </Box>\n              </Box>\n\n              {/* Level Info Section */}\n              <Box sx={{\n                width: '100%',\n                display: 'flex',\n                gap: 2,\n                mb: 1\n              }}>\n                <Box sx={{\n                  flex: 1,\n                  background: 'linear-gradient(145deg, rgba(110, 211, 255, 0.1) 0%, rgba(110, 211, 255, 0.05) 100%)',\n                  borderRadius: '16px',\n                  padding: '16px',\n                  border: '1px solid rgba(110, 211, 255, 0.1)',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: 1,\n                  position: 'relative',\n                  overflow: 'hidden',\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: '-100%',\n                    width: '100%',\n                    height: '100%',\n                    background: 'linear-gradient(90deg, transparent, rgba(110, 211, 255, 0.1), transparent)',\n                    animation: 'shine 2s infinite',\n                  },\n                  '@keyframes shine': {\n                    '100%': {\n                      left: '100%',\n                    },\n                  },\n                }}>\n                  <Typography sx={{ \n                    color: 'rgba(255, 255, 255, 0.7)',\n                    fontSize: '12px',\n                    textTransform: 'uppercase',\n                    letterSpacing: '0.5px'\n                  }}>\n                    Current Level\n                  </Typography>\n                  <Typography sx={{ \n                    color: '#6ed3ff',\n                    fontSize: '24px',\n                    fontWeight: '600',\n                    textShadow: '0 0 10px rgba(110, 211, 255, 0.5)'\n                  }}>\n                    {userStats?.level || 0}\n                  </Typography>\n                </Box>\n                <Box \n                sx={{\n                  flex: 1,\n                  background: 'linear-gradient(145deg, rgba(110, 211, 255, 0.1) 0%, rgba(110, 211, 255, 0.05) 100%)',\n                  borderRadius: '16px',\n                  padding: '16px',\n                  border: '1px solid rgba(110, 211, 255, 0.1)',\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  gap: 1,\n                  position: 'relative',\n                  overflow: 'hidden',\n                  '&::before': {\n                    content: '\"\"',\n                    position: 'absolute',\n                    top: 0,\n                    left: '-100%',\n                    width: '100%',\n                    height: '100%',\n                    background: 'linear-gradient(90deg, transparent, rgba(110, 211, 255, 0.1), transparent)',\n                    animation: 'shine 2s infinite 1s',\n                  },\n                }}>\n                  <Typography sx={{ \n                    color: 'rgba(255, 255, 255, 0.7)',\n                    fontSize: '12px',\n                    textTransform: 'uppercase',\n                    letterSpacing: '0.5px'\n                  }}>\n                    Tickets\n                  </Typography>\n                  <Typography sx={{ \n                    color: '#6ed3ff',\n                    fontSize: '24px',\n                    fontWeight: '600',\n                    textShadow: '0 0 10px rgba(110, 211, 255, 0.5)'\n                  }}>\n                    {userStats?.tickets || 0}\n                  </Typography>\n                </Box>  \n              </Box>\n\n              {/* Error Message */}\n              {ticketError && (\n                <Typography sx={{ \n                  color: '#ff4d4d', \n                  fontSize: '14px',\n                  textAlign: 'center',\n                  padding: '12px',\n                  backgroundColor: 'rgba(255, 77, 77, 0.1)',\n                  borderRadius: '12px',\n                  width: '100%',\n                  border: '1px solid rgba(255, 77, 77, 0.2)',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  gap: 1\n                }}>\n                  <span role=\"img\" aria-label=\"warning\">⚠️</span>\n                  {ticketError}\n                </Typography>\n              )}\n\n              {/* Action Buttons */}\n              <Box \n               sx={{ \n                width: '100%', \n                display: 'flex', \n                flexDirection: 'column', \n                gap: 2 \n              }}>\n                <Button\n                  fullWidth\n                  onClick={handleLevelUpgrade}\n                  disabled={isUpgrading || !userStats?.tickets || userStats?.tickets < 1}\n                  sx={{\n                    background: 'linear-gradient(90deg, #6ed3ff, #8ee9ff)',\n                    color: 'black',\n                    height: '48px',\n                    borderRadius: '12px',\n                    fontSize: '16px',\n                    fontWeight: '600',\n                    textTransform: 'none',\n                    position: 'relative',\n                    overflow: 'hidden',\n                    '&:hover': {\n                      background: 'linear-gradient(90deg, #8ee9ff, #6ed3ff)',\n                    },\n                    '&:disabled': {\n                      background: 'rgba(110, 211, 255, 0.1)',\n                      color: 'rgba(255, 255, 255, 0.3)',\n                    },\n                    '&::before': {\n                      content: '\"\"',\n                      position: 'absolute',\n                      top: 0,\n                      left: '-100%',\n                      width: '100%',\n                      height: '100%',\n                      background: 'linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent)',\n                      animation: 'shine 2s infinite',\n                    },\n                  }}\n                >\n                  {isUpgrading ? (\n                    <Box \n                    sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n                      <CircularProgress size={20} thickness={5} sx={{ color: 'black' }} />\n                      Processing...\n                    </Box>\n                  ) : (\n                    'Use Upgrade Ticket'\n                  )}\n                </Button>\n\n                {(() => {\n                  const currentLevel = userStats?.level || 0;\n                  const nextLevel = currentLevel + 1;\n                  const currentTickets = userStats?.tickets || 0;\n                  const neededTickets = nextLevel - currentTickets;\n                  \n                  if (currentLevel === 0 && neededTickets === 1) {\n                    return <LevelUpgrade \n                      onAdComplete={() => setShowLevelModal(true)}\n                      disabled={isUpgrading}\n                    />;\n                  }\n                  \n                  // Level 0 dışındaki tüm leveller için Get More Tickets butonunu göster\n                  return neededTickets > 0 ? (\n                    <Button\n                      fullWidth\n                      onClick={() => setShowSwapDrawer(true)}\n                      sx={{\n                        background: 'linear-gradient(90deg, #0088CC, #00A3FF)',\n                        color: 'white',\n                        height: '48px',\n                        borderRadius: '12px',\n                        fontSize: '16px',\n                        fontWeight: '600',\n                        textTransform: 'none',\n                        position: 'relative',\n                        overflow: 'hidden',\n                        '&:hover': {\n                          background: 'linear-gradient(90deg, #00A3FF, #0088CC)',\n                        },\n                        '&::before': {\n                          content: '\"\"',\n                          position: 'absolute',\n                          top: 0,\n                          left: '-100%',\n                          width: '100%',\n                          height: '100%',\n                          background: 'linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent)',\n                          animation: 'shine 2s infinite',\n                        },\n                      }}\n                    >\n                      Get More Tickets\n                    </Button>\n                  ) : null;\n                })()}\n\n                <Typography sx={{ \n                  color: 'rgba(255, 255, 255, 0.7)', \n                  fontSize: '14px',\n                  textAlign: 'center',\n                  padding: '8px 12px',\n                  borderRadius: '8px',\n                }}>\n                  {(() => {\n                    const currentLevel = userStats?.level || 0;\n                    const nextLevel = currentLevel + 1;\n                    const currentTickets = userStats?.tickets || 0;\n                    const neededTickets = nextLevel - currentTickets;\n                    \n                    // Sadece yetersiz ticket varsa mesajı göster\n                    return neededTickets > 0 \n                      ? `You need ${neededTickets} more ticket${neededTickets > 1 ? 's' : ''} to reach Level ${nextLevel}`\n                      : null;\n                  })()}\n                </Typography>\n\n                <Button\n                  fullWidth\n                  onClick={() => setShowLevelModal(false)}\n                  sx={{\n                    color: 'rgba(255, 255, 255, 0.6)',\n                    height: '48px',\n                    fontSize: '16px',\n                    textTransform: 'none',\n                    '&:hover': {\n                      background: 'rgba(255, 255, 255, 0.1)',\n                    }\n                  }}\n                >\n                  Cancel\n                </Button>\n              </Box>\n            </Box>\n          </Box>\n        </Modal>\n\n        {/* Level Up Success Modal */}\n        <Modal\n          open={showLevelUpSuccess}\n          onClose={() => setShowLevelUpSuccess(false)}\n          sx={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Box sx={{\n            backgroundColor: 'rgba(18, 22, 25, 0.95)',\n            backdropFilter: 'blur(20px)',\n            borderRadius: '24px',\n            padding: '32px',\n            width: '90%',\n            maxWidth: '360px',\n            border: '1px solid rgba(110, 211, 255, 0.2)',\n            outline: 'none',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            gap: '24px',\n            animation: 'popIn 0.3s ease-out',\n            '@keyframes popIn': {\n              '0%': {\n                transform: 'scale(0.9)',\n                opacity: 0,\n              },\n              '100%': {\n                transform: 'scale(1)',\n                opacity: 1,\n              },\n            },\n          }}>\n            <Box sx={{ \n              width: '80px', \n              height: '80px', \n              borderRadius: '50%', \n              backgroundColor: 'rgba(110, 211, 255, 0.1)',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              animation: 'pulse 1s ease-out'\n            }}>\n              <StarIcon sx={{ \n                fontSize: 40, \n                color: '#6ed3ff',\n                animation: 'rotate 1s ease-out'\n              }} />\n            </Box>\n            <Typography sx={{ \n              color: '#6ed3ff',\n              fontSize: '24px',\n              fontWeight: '500',\n              textAlign: 'center'\n            }}>\n              Level Up!\n            </Typography>\n            <Typography sx={{ \n              color: 'rgba(255, 255, 255, 0.7)',\n              fontSize: '16px',\n              textAlign: 'center'\n            }}>\n              {`You've reached Level ${userStats?.level || 1}`}\n            </Typography>\n          </Box>\n        </Modal>\n      </Box>\n    </Container>\n  );\n};\n\nexport default BoxOpening; "],"names":["app","initializeApp","firebaseConfig","db","getFirestore","Task","debug","blockId","taskRef","useRef","isDrawerOpen","setIsDrawerOpen","useState","loading","setLoading","handleClaim","telegramUserId","userDocRef","doc","updateDoc","increment","error","useEffect","handler","_event","task","jsxs","Fragment","styles","jsx","Drawer","Box","Typography","Button","commonStyles","KeyCrafting","keyParts","onCraftKey","isLoading","canCraftKey","progress","motion","KeyIcon","IconButton","InfoOutlinedIcon","CircularProgress","_interopRequireDefault","require$$0","Search","default_1","_createSvgIcon","require$$1","_jsxRuntime","require$$2","rotate","keyframes","RotatingIcon","styled","ADSTERRA_DIRECT_LINK","TOTAL_REQUIRED_VIEWS","VIEW_COUNT_KEY","LAST_CLAIM_KEY","COOLDOWN_TIME","LevelUpgrade","onAdComplete","disabled","setError","viewCount","setViewCount","timeLeft","setTimeLeft","lastClaim","lastClaimTime","timePassed","savedCount","timer","prev","handleAdClick","useCallback","_a","newCount","now","formatTimeLeft","ms","watchad","Sparkles","ticket","Hourglass","rolexDaytonaImage","gameCards","giftboxImage","alienwareImage","amazonImage","landRoverImage","rolexSubmarinerImage","donaldTrumpImage","rolexYachtmasterImage","rolexImage","chanelImage","louisVuittonImage","bmwImage","primeImage","sneakersImage","corsairImage","versaceImage","footballImage","maseratiImage","topgImage","porscheImage","ferrariImage","oldMoneyImage","cartierImage","diamondImage","hublotImage","BoxOpening","navigate","useNavigate","location","useLocation","userStats","setUserStats","isOpening","setIsOpening","currentReward","setCurrentReward","showReward","setShowReward","isCrafting","setIsCrafting","searchTerm","setSearchTerm","sortByPrice","setSortByPrice","currentTab","setCurrentTab","dropsSortBy","setDropsSortBy","showLevelModal","setShowLevelModal","setSelectedDrop","isUpgrading","setIsUpgrading","ticketError","setTicketError","showLevelUpSuccess","setShowLevelUpSuccess","showSwapDrawer","setShowSwapDrawer","getBoxCount","React","card","boxData","boxesData","unsubscribe","onSnapshot","userData","handleCardClick","cardId","handleCloseReward","handleCraftKey","userRef","gsap","renderMyDrops","allDrops","boxTitle","drops","drop","box","dropData","d","searchString","a","b","Grid","sum","sortType","index","Card","e","handleSellItem","handleLevelUpgrade","userDoc","getDoc","currentLevel","nextLevel","requiredTickets","Container","TextField","InputAdornment","SearchIcon","Tabs","_","newValue","Tab","aBoxCount","bBoxCount","PackageOpenIcon","BoxOpenAnimation","RewardDisplay","SwapDrawer","Modal","ticketImage","currentTickets","neededTickets","StarIcon"],"mappings":"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CACb,MAAO,SACT,EACA,CACE,GAAI,YACJ,MAAOC,GACP,MAAO,YACP,YAAa,QACb,UAAW,QACX,YAAa,6BACb,MAAO,MACT,EACA,CACE,GAAI,SACJ,MAAOC,GACP,MAAO,SACP,YAAa,QACb,UAAW,OACX,YAAa,wCACb,MAAO,QACT,EACA,CACE,GAAI,YACJ,MAAOC,GACP,MAAO,aACP,YAAa,SACb,UAAW,SACX,YAAa,wDACb,MAAO,YACT,EACA,CACE,GAAI,mBACJ,MAAOC,GACP,MAAO,aACN,YAAa,QACd,UAAW,QACX,YAAa,iCACb,MAAO,QACT,EACA,CACE,GAAI,eACJ,MAAOC,GACP,MAAO,eACP,YAAa,OACb,UAAW,OACX,YAAa,4BACb,MAAO,UACT,EACA,CACE,GAAI,oBACJ,MAAOC,GACP,MAAO,cACP,YAAa,SACb,UAAW,SACX,YAAa,gCACb,MAAO,QACT,EACA,CACE,GAAI,QACJ,MAAOC,GACP,MAAO,mBACV,YAAa,SACV,UAAW,SACX,YAAa,+BACb,MAAO,QACT,EAGA,CACE,GAAI,SACJ,MAAOC,GACP,MAAO,SACP,YAAa,SACb,UAAW,SACX,YAAa,4CACb,MAAO,QACT,EAEA,CACE,GAAI,gBACJ,MAAOC,GACP,MAAO,gBACP,YAAa,QACb,UAAW,QACX,YAAa,sCACb,MAAO,QACT,EAEA,CACE,GAAI,MACJ,MAAOC,GACP,MAAO,UACP,YAAa,SACb,UAAW,SACX,YAAa,mCACb,MAAO,YACT,EACA,CACE,GAAI,QACJ,MAAOC,GACP,MAAO,YACP,YAAa,QACb,UAAW,QACX,YAAa,gCACb,MAAO,SACT,EACA,CACE,GAAI,WACJ,MAAOC,GACP,MAAO,eACP,YAAa,QACb,UAAW,QACX,YAAa,iCACb,MAAO,SACT,EAGA,CACE,GAAI,gBACJ,MAAOd,GACP,MAAO,gBACP,YAAa,SACb,UAAW,SACX,YAAa,iCACb,MAAO,QACT,EACA,CACE,GAAI,UACJ,MAAOe,GACP,MAAO,iBACP,YAAa,QACb,UAAW,QACX,YAAa,0BACb,MAAO,MACT,EACA,CACE,GAAI,UACJ,MAAOC,GAC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","x_google_ignoreList":[2]}